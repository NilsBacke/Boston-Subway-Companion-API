# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
    node:
        docker:
            # specify the version you desire here
            - image: circleci/node:8

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/mongo:3.4.4

        working_directory: ~/repo

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: yarn install

            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}

            # run type check!
            - run:
                  name: type check
                  command: npm run type-check
    develop:
        docker:
            # specify the version you desire here
            - image: circleci/node:8

        working_directory: ~/repo

        steps:
            - checkout

            - run: sudo apt-get update
            - run: sudo apt-get install zip -y
            - run: sudo apt-get install python3 -y
            - run: sudo apt-get install python3-pip -y
            - run: sudo pip3 install awscli --upgrade
            # - run: aws configure set region us-east-1
            - run: echo $CIRCLE_WORKING_DIRECTORY
            - run: ls
            - run: base64 --decode 'InVzZSBzdHJpY3QiOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7IHZhbHVlOiB0cnVlIH0pOwpleHBvcnRzLmFwaUtleSA9ICdkYzQ0YjMwMTAxMTE0ZTg4YjQ1MDQxYTRhOWI2NWUwNic7CmV4cG9ydHMuYmFzZVVSTCA9ICdodHRwczovL2FwaS12My5tYnRhLmNvbSc7CmV4cG9ydHMuYXdzQXBpS2V5ID0gJ3E5c2RtOFlJUFMyTTh3ZjNmcldpYzU2Y3FaNFdTSXVNNE5ObllvS2YnOwpleHBvcnRzLmRpc3RhbmNlTWF0cml4S2V5ID0gJ0FJemFTeUFXZFl2QXlPWUJqcXFsVERRQ0tZQ245cHNOSmtOSFJfZyc7CmV4cG9ydHMuZGlyZWN0aW9uc0tleSA9ICdBSXphU3lBYzBLVFhWd3NhaWNzSjdmOWdnRXU2QW1JbDFKT19CUWcnOwo=' > './lib/routes/secrets.js'
            - run: sudo npm install -g typescript
            - run: tsc
            - run: zip -r ./boston-subway-companion-api.zip *
            - run: find . -name \"*.js\" -type f -delete
            - run: aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:455170633390:function:bostonSubwayCompanionAPI --zip-file fileb://boston-subway-companion-api.zip

    master:
        docker:
            # specify the version you desire here
            - image: circleci/node:8

        working_directory: ~/repo

        steps:
            - checkout

            - run: sudo apt-get update
            - run: sudo apt-get install zip -y
            - run: sudo apt-get install python3 -y
            - run: sudo apt-get install python3-pip -y
            - run: sudo pip3 install awscli --upgrade
            # - run: aws configure set region us-east-1
            - run: touch ./lib/routes/secrets.js
            - run: echo $CIRCLE_WORKING_DIRECTORY
            - run: echo $CONFIG | base64 --decode > ./lib/routes/secrets.js
            - run: sudo npm install -g typescript
            - run: tsc
            - run: zip -r ./boston-subway-companion-api-prod.zip *
            - run: find . -name \"*.js\" -type f -delete
            - run: aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:455170633390:function:bostonSubwayCompanionAPI-prod --zip-file fileb://boston-subway-companion-api-prod.zip

workflows:
    version: 2
    build:
        jobs:
            - node:
                  filters:
                      branches:
                          ignore: [develop, master]
    deploy-develop:
        jobs:
            - node:
                  filters:
                      branches:
                          only: develop
            - develop:
                  requires:
                      - node
                  filters:
                      branches:
                          only: develop
    deploy-master:
        jobs:
            - node:
                  filters:
                      branches:
                          only: master
            - master:
                  requires:
                      - node
                  filters:
                      branches:
                          only: master
